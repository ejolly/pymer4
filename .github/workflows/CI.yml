name: tests & build
on:
  push:
    branches:
      - bambi
  pull_request:
    branches:
      - bambi
  workflow_dispatch:

env:
  PACKAGE_NAME: pymer4
  DEPLOY_PY_VER: 3.8  # only this job deploys docs, anaconda.org, pypi
  DEPLOY_OS: ubuntu-latest
  CONDA_BLD_PATH: /tmp/ci_conda_bld

defaults:
  run:
    # login shell to source the conda hook in .bash_profile
    shell:
      bash -l {0}

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # OSs to test
        os: [ubuntu-latest]
        # Python versions to test
        python-version: [3.7, 3.8, 3.9]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

        # See also: https://github.com/marketplace/actions/install-poetry-action when
        # testing on more OSs
      - name: Setup Environment
        run: |
          curl -sSL https://install.python-poetry.org | python
          poetry install 

      # 4. Actually run the tests with coverage
      - name: Run Tests
        run: |
          poetry run python --version
          poetry run black --check --verbose .
          poetry run pytest --cov=pymer4

      # 5a. Build docs (only for 3.8 which handles deployment)
      # Will also run on PRs which serves as another layer of testing
      # - name: Build docs
      #   env:
      #     PY_VER: ${{ matrix.py_ver }}
      #   if: ${{ matrix.py_ver == env.DEPLOY_PY_VER && matrix.os == env.DEPLOY_OS }}
      #   run: |
      #     conda activate env_$PY_VER
      #     conda install sphinx sphinx_bootstrap_theme sphinx-gallery -c conda-forge
      #     cd docs && make clean && make html
      #     touch _build/html/.nojekyll

